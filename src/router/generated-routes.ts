// ðŸ”¥ Auto-generated by Sage Router - DO NOT EDIT!
// Generated at: 2025-06-30T01:22:23.292Z

export interface SageRoute {
  path: string
  component: () => Promise<any>
  name?: string
  meta: Record<string, any>
  params: string[]
}

export const routes: SageRoute[] = [
  {
    path: '/audius/users/:id',
    component: () => import('../pages/audius.users.[id].vue'),
    name: 'Audius User Detail',
    meta:     {
        "description": "view an Audius user",
        "requiresAuth": true
    },
    params: ["id"]
  },
  {
    path: '/audius/playlists/:id',
    component: () => import('../pages/audius.playlists.[id].vue'),
    name: 'Audius Playlist Detail',
    meta:     {
        "description": "view an Audius playlist",
        "requiresAuth": true
    },
    params: ["id"]
  },
  {
    path: '/studies/:id',
    component: () => import('../pages/studies.[id].vue'),
    meta: {},
    params: ["id"]
  },
  {
    path: '/g/:id',
    component: () => import('../pages/g.[id].vue'),
    name: 'Gist',
    meta:     {
        "description": "view shared content",
        "requiresAuth": false
    },
    params: ["id"]
  },
  {
    path: '/visualizer',
    component: () => import('../pages/visualizer.vue'),
    name: 'Visualizer',
    meta:     {
        "description": "the main visualizer",
        "requiresAuth": true
    },
    params: []
  },
  {
    path: '/studies',
    component: () => import('../pages/studies.vue'),
    meta: {},
    params: []
  },
  {
    path: '/settings',
    component: () => import('../pages/settings.vue'),
    name: 'Settings',
    meta:     {
        "description": "configure the visualizer",
        "requiresAuth": true
    },
    params: []
  },
  {
    path: '/design',
    component: () => import('../pages/design.vue'),
    name: 'Design',
    meta:     {
        "description": "customize your visuals",
        "requiresAuth": true
    },
    params: []
  },
  {
    path: '/audius',
    component: () => import('../pages/audius.vue'),
    name: 'Audius Home',
    meta:     {
        "description": "audius library dashboard",
        "requiresAuth": true
    },
    params: []
  },
  {
    path: '/',
    component: () => import('../pages/index.vue'),
    name: 'Homepage',
    meta:     {
        "description": "the homepage",
        "requiresAuth": false,
        "redirectWhenAuthenticated": "/visualizer"
    },
    params: []
  }
] as const

export const routeMap = new Map(routes.map(route => [route.path, route]))

// Route matching helper
export function matchRoute(path: string): SageRoute | null {
  // First try exact match
  const exact = routeMap.get(path)
  if (exact) return exact
  
  // Try pattern matching for dynamic routes
  for (const route of routes) {
    if (route.params.length > 0) {
      const pattern = route.path.replace(/:(\w+)(\*)?/g, (_, param, catchAll) => {
        return catchAll ? '(.*)' : '([^/]+)'
      })
      const regex = new RegExp('^' + pattern + '$')
      if (regex.test(path)) {
        return route
      }
    }
  }
  
  return null
}

// Extract params from path
export function extractParams(routePath: string, actualPath: string): Record<string, string> {
  const route = routeMap.get(routePath) || matchRoute(actualPath)
  if (!route || route.params.length === 0) return {}
  
  const pattern = route.path.replace(/:(\w+)(\*)?/g, (_, param, catchAll) => {
    return `(${catchAll ? '.*' : '[^/]+'})`
  })
  const regex = new RegExp('^' + pattern + '$')
  const matches = actualPath.match(regex)
  
  if (!matches) return {}
  
  const params: Record<string, string> = {}
  route.params.forEach((param, index) => {
    params[param] = matches[index + 1]
  })
  
  return params
}
